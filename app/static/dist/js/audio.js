function getCsrfToken(){return document.querySelector('meta[name="csrf-token"]').getAttribute("content");}
function showToast(message,type){let toast=document.getElementById("toast");if(!toast){toast=document.createElement("div");toast.id="toast";document.body.appendChild(toast);}
toast.textContent=message;toast.className=type;toast.style.display="flex";toast.style.opacity="1";setTimeout(()=>{toast.style.opacity="0";setTimeout(()=>{toast.style.display="none";},600);},3000);}
function setupPromptToggle(formId,radioName,manualGroup,generateGroup){const radioButtons=document.querySelectorAll(formId+' input[name="'+radioName+'"]',);const manualPromptGroup=document.querySelector(manualGroup);const generatePromptGroup=document.querySelector(generateGroup);function setupRadioListeners(){radioButtons.forEach((radio)=>{radio.addEventListener("change",(event)=>{switch(event.target.value){case"manual":manualPromptGroup.style.display="flex";generatePromptGroup.style.display="none";break;case"generate":manualPromptGroup.style.display="none";generatePromptGroup.style.display="flex";break;default:manualPromptGroup.style.display="none";generatePromptGroup.style.display="none";break;}});});}
setupRadioListeners();const checkedRadioButton=document.querySelector(formId+' input[name="'+radioName+'"]:checked',);if(checkedRadioButton){checkedRadioButton.dispatchEvent(new Event("change"));}}
function handleFormSubmission(formId,endpoint,isTTS=false){const form=document.getElementById(formId);form.addEventListener("submit",function(event){event.preventDefault();const formData=new FormData(form);fetch(endpoint,{method:"POST",body:formData,headers:{"X-CSRFToken":getCsrfToken(),},}).then((response)=>response.json()).then((data)=>{if(data.status==="success"){showToast(`${formId}completed successfully.`,"success");}else{showToast(`Error during ${formId}.`,"error");}}).catch((error)=>{showToast("An unexpected error occurred."+error,"error");});});}
handleFormSubmission("tts-form","/audio/generate_tts",true);handleFormSubmission("transcription-form","/audio/transcription");handleFormSubmission("translation-form","/audio/translation");function handlePreferencesFormSubmission(formId,endpoint){const form=document.getElementById(formId);form.addEventListener("submit",function(event){event.preventDefault();const formData=new FormData(form);fetch(endpoint,{method:"POST",body:formData,headers:{"X-CSRFToken":getCsrfToken(),},}).then((response)=>response.json()).then((data)=>{if(data.status==="success"){showToast(`Preferences updated successfully.`,"success");}else{showToast(`Error updating preferences.`,"error");}}).catch((error)=>{showToast("An unexpected error occurred while updating preferences."+error,"error",);});});}
handlePreferencesFormSubmission("tts-preferences-form","/audio/tts_preferences",);handlePreferencesFormSubmission("whisper-preferences-form","/audio/whisper_preferences",);function removeActiveClassFromButtons(){document.querySelectorAll(".utility-toggle i").forEach((icon)=>{icon.classList.remove("active");});}
function setActiveButton(buttonElement){removeActiveClassFromButtons();if(buttonElement){buttonElement.classList.add("active");}}
function displayUtility(utilityName){const utilities=document.querySelectorAll(".utility");utilities.forEach((utility)=>{utility.style.display=utility.id===`${utilityName}-utility`?"flex":"none";});const ttsPreferencesForm=document.getElementById("tts-preferences-form");const whisperPreferencesForm=document.getElementById("whisper-preferences-form",);if(ttsPreferencesForm)ttsPreferencesForm.style.display="none";if(whisperPreferencesForm)whisperPreferencesForm.style.display="none";if(utilityName==="tts"){ttsPreferencesForm.style.display="flex";}else if(utilityName==="transcription"||utilityName==="translation"){whisperPreferencesForm.style.display="flex";const languageOption=whisperPreferencesForm.querySelector(".form-group.language",);languageOption.style.display=utilityName==="transcription"?"block":"none";}}
const utilityIcons=document.querySelectorAll(".utility-toggle i");utilityIcons.forEach((icon)=>{icon.addEventListener("click",function(){const selectedUtility=this.dataset.utility;displayUtility(selectedUtility);setActiveButton(this);});});if(utilityIcons.length>0){const firstUtilityIcon=utilityIcons[0];firstUtilityIcon.click();setActiveButton(firstUtilityIcon);}
setupPromptToggle("#transcription-form","prompt_option","#manual-prompt-group","#generate-prompt-group",);setupPromptToggle("#translation-form","prompt_option","#manual-prompt-group","#generate-prompt-group",);function toggleDetails(jobId,jobType){var detailsElement=document.getElementById(jobType+"-details-"+jobId);var isVisible=detailsElement.style.display==="block";detailsElement.style.display=isVisible?"none":"block";}
function appendTranscriptionJobToHistory(job){const historyList=document.getElementById("transcription-history").querySelector("ul");const newHistoryEntry=document.createElement("li");newHistoryEntry.className="history-entry";newHistoryEntry.dataset.jobId=job.id;newHistoryEntry.setAttribute("onclick",`toggleDetails('${job.id}','transcription')`,);newHistoryEntry.innerHTML=`<div class="history-summary">${job.created_at}-${job.input_filename}</div><div class="history-details"id="transcription-details-${job.id}"style="display: none"><p>Language:${job.language}</p><p>Model:${job.model}</p><p>Temperature:${job.temperature}</p><p>Prompt:${job.prompt}</p><a href="${job.download_url}"download><i class="fas fa-download"></i>Download Transcription</a></div>`;historyList.appendChild(newHistoryEntry);}
function appendTranslationJobToHistory(job){const historyList=document.getElementById("translation-history").querySelector("ul");const newHistoryEntry=document.createElement("li");newHistoryEntry.className="history-entry";newHistoryEntry.dataset.jobId=job.id;newHistoryEntry.setAttribute("onclick",`toggleDetails('${job.id}','translation')`,);newHistoryEntry.innerHTML=`<div class="history-summary">${job.created_at}-${job.input_filename}</div><div class="history-details"id="translation-details-${job.id}"style="display: none"><p>Model:${job.model}</p><p>Temperature:${job.temperature}</p><p>Prompt:${job.prompt}</p><a href="${job.download_url}"download><i class="fas fa-download"></i>Download Translation</a></div>`;historyList.appendChild(newHistoryEntry);}
function appendTtsJobToHistory(job){const historyList=document.getElementById("tts-history").querySelector("ul");const newHistoryEntry=document.createElement("li");newHistoryEntry.className="history-entry";newHistoryEntry.dataset.jobId=job.id;newHistoryEntry.setAttribute("onclick",`toggleDetails('${job.id}','tts')`);newHistoryEntry.innerHTML=`<div class="history-summary">${job.created_at}-${job.voice}</div><div class="history-details"id="tts-details-${job.id}"style="display: none"><p>Model:${job.model}</p><p>Speed:${job.speed}</p><audio controls><source src="${job.download_url}"type="audio/mpeg"/>Your browser does not support the audio element.</audio><a href="${job.download_url}"download>Download Audio</a></div>`;historyList.appendChild(newHistoryEntry);}