"""Chat preferences

Revision ID: f5dac3121ded
Revises: e3cb7a495239
Create Date: 2023-12-03 19:26:25.753070

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'f5dac3121ded'
down_revision = 'e3cb7a495239'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('document_chunks', schema=None) as batch_op:
        batch_op.drop_constraint('document_chunks_ibfk_1', type_='foreignkey')
        batch_op.alter_column('document_id',
                              existing_type=mysql.INTEGER(),
                              nullable=False)
        batch_op.create_foreign_key('document_chunks_ibfk_1', 'documents',
                                    ['document_id'], ['id'])

    # Drop the foreign key constraint before altering the chunk_id column
    with op.batch_alter_table('document_embeddings', schema=None) as batch_op:
        batch_op.drop_constraint('document_embeddings_ibfk_2', type_='foreignkey')
        batch_op.alter_column('chunk_id',
                              existing_type=mysql.INTEGER(),
                              nullable=False)
    # Re-add the foreign key constraint after the column has been altered
    with op.batch_alter_table('document_embeddings', schema=None) as batch_op:
        batch_op.create_foreign_key('document_embeddings_ibfk_2', 'document_chunks',
                                    ['chunk_id'], ['id'])

    # ### commands to create the ChatPreferences table ###
    op.create_table(
        'chat_preferences',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id'), unique=True),
        sa.Column('show_timestamps', sa.Boolean(), default=True),
        sa.Column('model', sa.String(length=50), default='text-davinci-003'),
        sa.Column('temperature', sa.Float(), default=0.7),
        sa.Column('max_tokens', sa.Integer(), default=150),
        sa.Column('frequency_penalty', sa.Float(), default=0.0),
        sa.Column('presence_penalty', sa.Float(), default=0.0),
        sa.Column('top_p', sa.Float(), default=1.0),
        sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('document_chunks', schema=None) as batch_op:
        batch_op.drop_constraint('document_chunks_ibfk_1', type_='foreignkey')
        batch_op.alter_column('document_id',
                              existing_type=mysql.INTEGER(),
                              nullable=True)

        batch_op.create_foreign_key('document_chunks_ibfk_1', 'documents',
                                    ['document_id'], ['id'])
    with op.batch_alter_table('document_chunks', schema=None) as batch_op:
        batch_op.alter_column('document_id',
                              existing_type=mysql.INTEGER(),
                              nullable=True)

        # Drop the foreign key constraint before altering the chunk_id column
        with op.batch_alter_table('document_embeddings', schema=None) as batch_op:
            batch_op.drop_constraint('document_embeddings_ibfk_2', type_='foreignkey')
            batch_op.alter_column('chunk_id',
                                  existing_type=mysql.INTEGER(),
                                  nullable=True)
        # Re-add the foreign key constraint after the column has been altered
        with op.batch_alter_table('document_embeddings', schema=None) as batch_op:
            batch_op.create_foreign_key('document_embeddings_ibfk_2', 'document_chunks',
                                        ['chunk_id'], ['id'])

    op.drop_table('chat_preferences')
